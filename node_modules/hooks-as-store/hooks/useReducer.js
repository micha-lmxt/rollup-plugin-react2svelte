import { getOrAddHook } from '../entry/cacheArray';
import { get, writable } from 'svelte/store';
export function initialize(reducer, start, init) {
    return function () {
        const hook = writable(init ? init(start) : start);
        hook.reducer = (action) => {
            hook.update((state) => reducer(state, action));
        };
        return hook;
    };
}
export function useReducer(reducer, initialArg, init) {
    const hook = getOrAddHook(initialize(reducer, initialArg, init));
    return [get(hook), (action) => hook.update((state) => reducer(state, action))];
}
