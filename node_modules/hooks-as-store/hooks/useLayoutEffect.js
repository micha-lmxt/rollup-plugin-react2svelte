import { getOrAddHook } from '../entry/cacheArray';
import { afterUpdate, onDestroy } from 'svelte';
import { unequalArgs } from './utils';
function initialize() {
    return function () {
        const w = { reqs: undefined, cleanup: undefined, handler: undefined };
        afterUpdate(() => {
            if (w.handler) {
                if (w.cleanup) {
                    w.cleanup();
                }
                w.cleanup = w.handler();
            }
        });
        onDestroy(() => {
            const cl = w.cleanup;
            if (cl) {
                cl();
            }
        });
        return w;
    };
}
export function useLayoutEffect(handler, reqs) {
    const hook = getOrAddHook(initialize());
    const r = hook.reqs;
    if (unequalArgs(r, reqs)) {
        hook.handler = handler;
        hook.reqs = reqs;
    }
}
