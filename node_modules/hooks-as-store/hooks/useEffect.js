import { getOrAddHook } from '../entry/cacheArray';
import { tick, onDestroy, onMount } from 'svelte';
import { unequalArgs } from './utils';
function initialize() {
    return function () {
        const w = { reqs: undefined, cleanup: undefined, mounted: false };
        onMount(() => (w.mounted = true));
        onDestroy(() => {
            const cl = w.cleanup;
            if (cl) {
                cl();
            }
        });
        return w;
    };
}
export function useEffect(handler, reqs) {
    const hook = getOrAddHook(initialize());
    const r = hook.reqs;
    if (unequalArgs(r, reqs)) {
        tick().then(() => {
            if (hook.mounted) {
                hook.reqs = reqs;
                hook.cleanup = handler() || undefined;
            }
        });
    }
}
