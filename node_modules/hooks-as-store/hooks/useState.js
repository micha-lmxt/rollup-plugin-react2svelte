import { getOrAddHook } from '../entry/cacheArray';
import { get, writable } from 'svelte/store';
function initialize(start, init) {
    return function () {
        const hook = writable(init ? init(start) : start);
        hook.setter = (f) => {
            if (typeof f === 'function') {
                hook.update(f);
            }
            else {
                hook.set(f);
            }
        };
        return hook;
    };
}
export function useState(start) {
    const s = typeof start === 'function' ? start() : start;
    const hook = getOrAddHook(initialize(s));
    return [get(hook), hook.setter];
}
